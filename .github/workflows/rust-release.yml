name: Release Rust Application

on:
  pull_request:
    types: [ closed ]
    branches:
      - master


jobs:
  release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.labels.*.name, 'release/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: '1.70'  # Cambia esto a la versiÃ³n de Rust que necesitas

      - name: Get current version from Cargo.toml
        id: get_version
        working-directory: document_manager
        run: |
          VERSION=$(grep '^version =' Cargo.toml | head -n 1 | awk -F ' = ' '{print $2}' | tr -d '"')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Determine new version
        id: determine_version
        working-directory: document_manager

        run: |
          VERSION=${{ env.VERSION }}
          LABEL=$(echo "${{ github.event.pull_request.labels[*].name }}" | grep -oP '(?<=release\/)\w+')

          if [ -z "$LABEL" ]; then
            echo "No valid release label found."
            exit 1
          fi

          IFS="." read -r MAJOR MINOR PATCH <<< "$VERSION"

          case "$LABEL" in
            "major")
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            "minor")
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            "patch")
              PATCH=$((PATCH + 1))
              ;;
            *)
              echo "Invalid release label: $LABEL"
              exit 1
              ;;
          esac

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update version in Cargo.toml
        working-directory: document_manager
        run: |
          sed -i '0,/^version = /s/^version = "\(.*\)"/version = "${{ env.NEW_VERSION }}"/' Cargo.toml

      - name: Commit and push version update
        uses: EndBug/add-and-commit@v9
        with:
          author_name: 'GitHub Actions'
          author_email: 'actions@github.com'
          message: 'Update version to ${{ env.NEW_VERSION }}'
          add: 'Cargo.toml'
          push: true
          working-directory: document_manager


      - name: Build the application
        run: cargo build --release

      - uses: manoadamro/rust-release@v1
        with:
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          cargo: document_manager/Cargo.toml
