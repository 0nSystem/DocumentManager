name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            extension: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            extension: .exe
          - os: macos-latest
            target: x86_64-apple-darwin
            extension: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build project
        run: |
          cd document_manager
          cargo build --release --target ${{ matrix.target }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/DocumentManager${{ matrix.extension }}
          asset_name: DocumentManager-${{ matrix.target }}${{ matrix.extension }}
          asset_content_type: application/octet-stream

  create_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset from Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/your_binary${{ matrix.extension }}
          asset_name: your_binary-${{ matrix.target }}${{ matrix.extension }}
          asset_content_type: application/octet-stream
