name: Rust-Binary-Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  generate-release:
    permissions:
      contents: write
    runs-on: 'ubuntu-latest'
    steps:

      - name: Set Version
        shell: bash
        run: |
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$(echo ${GITHUB_REF_NAME} | cut -f1 -d-)" >> $GITHUB_ENV  

      - name: Generate release ${{ steps.version.outputs.version }}
        uses: actions/create-release@v1
        id: create-release
        with:
          draft: false
          prerelease: false
          release_name: ${{ env.RELEASE_VERSION }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}

  build:
    permissions:
      contents: write
    needs: 'generate-release'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            extension: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            extension: .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build project
        run: |
          cd document_manager
          cargo build --release --target ${{ matrix.target }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.generate-release.outputs.upload_url }}
          asset_path: document_manager/target/${{ matrix.target }}/release/DocumentManager${{ matrix.extension }}
          asset_name: DocumentManager-${{ matrix.target }}${{ matrix.extension }}
          asset_content_type: application/octet-stream
